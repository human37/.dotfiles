# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = ['workspace browser']

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

[[on-window-detected]]
if.app-name-regex-substring = 'Arc'
run = 'move-node-to-workspace browser'

[[on-window-detected]]
if.app-name-regex-substring = 'Cursor'
run = 'move-node-to-workspace code'

[[on-window-detected]]
if.app-name-regex-substring = 'Obsidian'
run = 'move-node-to-workspace notes'

[[on-window-detected]]
if.app-name-regex-substring = 'Slack'
run = 'move-node-to-workspace slack'

[[on-window-detected]]
if.app-name-regex-substring = 'Linear'
run = 'move-node-to-workspace notes'

[[on-window-detected]]
if.app-name-regex-substring = 'Front'
run = 'move-node-to-workspace slack'

[[on-window-detected]]
if.app-name-regex-substring = 'Postman'
run = 'move-node-to-workspace postman'

[[on-window-detected]]
if.app-name-regex-substring = 'Datagrip'
run = 'move-node-to-workspace db'

[[on-window-detected]]
if.app-id = 'com.riotgames.LeagueOfLegends'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.riotgames.RiotClient'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'org.winehq.wine'
run = 'layout floating'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 8
inner.vertical = 8
outer.left = 4
outer.bottom = 4 
outer.top = 4
outer.right = 4



# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

alt-d = 'workspace db'
alt-u = 'workspace browser'
alt-i = 'workspace code'
alt-m = 'workspace music'
alt-n = 'workspace notes'
alt-o = 'workspace openai'
alt-p = 'workspace postman'
alt-s = 'workspace slack'
alt-y = 'workspace term'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-d = 'move-node-to-workspace db'
alt-shift-u = 'move-node-to-workspace browser'
alt-shift-i = 'move-node-to-workspace code'
alt-shift-m = 'move-node-to-workspace music'
alt-shift-n = 'move-node-to-workspace notes'
alt-shift-o = 'move-node-to-workspace openai'
alt-shift-p = 'move-node-to-workspace postman'
alt-shift-s = 'move-node-to-workspace slack'
alt-shift-y = 'move-node-to-workspace term'

alt-shift-semicolon = 'mode service'

[workspace-to-monitor-force-assignment]
slack = 'built-in' # built in retina display
notes = 'built-in' # built in retina display
music = 'built-in' # built in retina display
term = 'main'


[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main']                # reset layout
f = ['layout floating tiling', 'mode main']
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']
